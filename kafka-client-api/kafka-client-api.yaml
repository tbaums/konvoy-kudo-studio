
apiVersion: v1
kind: Service
metadata:
  name: kafka-client-api-svc
  namespace: kafka-client-api
spec:
  type: ClusterIP
  selector:
    app: kafka-client-api
  ports:
    - port: 8080
      targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
  labels:
    app: kafka-client-api
  name: kafka-client-api
  namespace: kafka-client-api
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: kafka-client-api
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: kafka-client-api
    spec:
      containers:
      - image: tbaums/kafka-client-api:latest
        imagePullPolicy: Always
        name: kafka-client-api
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        env:
        - name: CURRENT_POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: PYTHONUNBUFFERED
          value: "1"
        - name: KAFKA_ENDPOINT
          value: "kafka-kafka-0.kafka-svc.platform-services.svc.cluster.local:9093"
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 1
status: {}

---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  annotations:
    kubernetes.io/ingress.class: traefik
  name: kafka-client-api-ingress
  namespace: kafka-client-api
spec:
  rules:
  - http:
      paths:
      - path: /kafka-client-api
        backend:
          serviceName: kafka-client-api-svc
          servicePort: 8080
