apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: svelte-client
  name: svelte-client
  namespace: svelte-ui
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: svelte-client
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: svelte-client
    spec:
      containers:
      - image: tbaums/svelte-client:latest
        imagePullPolicy: Always
        name: svelte-client
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        env:
          #TODO: get TLS working because this is v dangerous
        - name: NODE_TLS_REJECT_UNAUTHORIZED
          value: '0'
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 5
---
apiVersion: v1
kind: Service
metadata:
  name: svelte-client-svc
  namespace: svelte-ui
spec:
  selector:
    app: svelte-client
  ports:
    - port: 3000
      targetPort: 3000
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  annotations:
    kubernetes.io/ingress.class: traefik
  name: svelte-client-ingress
  namespace: svelte-ui
spec:
  rules:
  - http:
      paths:
      - path: /svelte
        backend:
          serviceName: svelte-client-svc
          servicePort: 3000

# For local development or other purposes
# ---
# apiVersion: v1
# kind: Service
# metadata:
#   name: svelte-client-np
# spec:
#   type: NodePort
#   selector:
#     app: svelte-client
#   ports:
#     # Which port on the node is the service available through?    
#     - nodePort: 30303
#     # Inside the cluster, what port does the service expose?
#       port: 3000
#     # Which port do pods selected by this service expose?
#       targetPort: 3000

