apiVersion: apps/v1
kind: Deployment
metadata:
  generation: 1
  labels:
    app: kafka-robot-actor
  name: kafka-robot-actor
  namespace: kafka-robot-actors
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: kafka-robot-actor
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: kafka-robot-actor
    spec:
      containers:
      - image: tbaums/kafka-robot-actor:latest
        imagePullPolicy: Always
        name: kafka-robot-actor
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        env:
        - name: PYTHONUNBUFFERED
          value: "1"
        - name: KAFKA_CLIENT_API
          value: "kafka-client-api-svc.kafka-client-api.svc.cluster.local:8080"
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      terminationGracePeriodSeconds: 1
---
apiVersion: v1
kind: Service
metadata:
  name: robot-api-svc
  namespace: kafka-robot-actors
spec:
  type: ClusterIP
  selector:
    app: kafka-robot-actor
  ports:
    - port: 8080
      targetPort: 8080
---
  apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubernetes.io/ingress.class: traefik
    name: robot-api-ingress
    namespace: kafka-robot-actors
  spec:
    rules:
    - http:
        paths:
        - path: /robot-api
          backend:
            serviceName: robot-api-svc
            servicePort: 8080
